initGridBox()
  box-sizing(border-box)

initGridContainer(gutter = gridGutterWidth)
  box-sizing(border-box)
  margin-right auto
  margin-left auto
  padding-left (gutter / 2)
  padding-right @padding-left
  clearfix()

initGridRow(gutter = gridGutterWidth)
  box-sizing(border-box)
  margin-left (gutter / -2)
  margin-right @margin-left
  clearfix()

initGridColumn(gutter = gridGutterWidth)
  list = ''
  for index in (1..columnCount)
    list += ', ' if index > 1
    list += '.col-xs-' + index + ', .col-sm-' + index + ', .col-md-' + index + ', .col-lg-' + index

  {list}
    box-sizing(border-box)
    position relative
    // Prevent columns from collapsing when empty
    min-height 1px
    // Inner gutter via padding
    padding-left  (gutter / 2)
    padding-right (gutter / 2)

floatGridColumn(breakpointClass)
  list = ''
  for index in (1..columnCount)
    list += ', ' if index > 1
    list += '.col-' + breakpointClass + '-' + index

  {list}
    float: left;

calcGridColumnWith(breakpoingClass)
  for index in (1..columnCount)
    {'.col-' + breakpoingClass + '-' + index}
      width (index / columnCount * 100%)

calcGridColumnOffset(breakpoingClass)
  for index in (1..columnCount)
    {'.col-' + breakpoingClass + '-offset-' + index}
      margin-left (index / columnCount * 100%)

calcGridColumnPush(breakpoingClass)
  {'.col-' + breakpoingClass + '-push-0'}
    left auto

  for index in (1..columnCount)
    {'.col-' + breakpoingClass + '-push-' + index}
      left (index / columnCount * 100%)

calcGridColumnPull(breakpoingClass)
  {'.col-' + breakpoingClass + '-push-0'}
    right auto

  for index in (1..columnCount)
    {'.col-' + breakpoingClass + '-pull-' + index}
      right (index / columnCount * 100%)

makeGridColumnStyle(breakpointClass)
  floatGridColumn(breakpointClass)
  calcGridColumnWith(breakpointClass)
  calcGridColumnOffset(breakpointClass)
  calcGridColumnPush(breakpointClass)
  calcGridColumnPull(breakpointClass)
